"""DevNet High - Class of 2020 - Challenge 1"""

import random
import ipaddress

# TODO: Write a print statement that displays both the type and value of 'ip'
ip = "10.1.1.200"
print(type(ip),ip)

# TODO: Write a conditional to print out if `iosversion` is less than or greater than 14
i = random.randint(12, 17)
print('i is {}'.format(i))

if i < 14:
    print("iosversion is less than 14")
elif i > 14:
    print("iosversion is greater than 14")

# TODO: Write a conditional that prints the serial number of the device
devices = ({'CAT9300':'XVNM1245ERGC'}, {'ISR4331':'VNMM8742THBX'}, {'NGFW2120':'EAQP4900RTJO'})
device = random.sample(devices, 1) [0]

#Create list of known device values to check against.  Minimizes the need for if, else, else, else as the list potentially grows.
match = ['CAT9300','ISR4331','NGFW2120']

#Check devices in match
for dev in match:
    #if dev in match matches the value of device.keys()[0] print the set devSerial variable and print
    if dev == list(device.keys())[0]:
        devSerial = list(device.values())[0]
        print(list(device.keys())[0] + " has a serial number of " + devSerial)



# Function for converting CIDR notation into 32-bit netmask (nothing to do here)
def cidr_to_netmask(ip_str):
    ip = ipaddress.IPv4Network(ip_str)
    return ip.with_netmask

'''
TODO: Call the function above few times to so that the input of IP network with CIDR displays the IP network with 32-bit netmask
Example:
Input would be '10.1.1.0/24' and when printed out the output would be '10.1.1.0/255.255.255.0'
'''
ip1='192.168.1.0/24'
ip2='10.128.0.0/11'
ip3='172.16.0.0/20'

cidr_to_netmask(ip1)
cidr_to_netmask(ip2)
cidr_to_netmask(ip3)

print()

print()

print()